--------------------------------------------------------
--  DDL for Package PKG_MSB_BC_REG_API
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "IBS"."PKG_MSB_BC_REG_API" IS
TYPE UserInfoRecord IS RECORD (
     cifNo VARCHAR2(50),
     email VARCHAR2(50),

     securityType VARCHAR2(20),
     userName VARCHAR2(100),
     mobile VARCHAR2(100),
     openMbs VARCHAR2(1),
     openIbs VARCHAR2(1),
     groupId VARCHAR2(30),
     groupIdMbs VARCHAR2(30),
     passwordMD5 VARCHAR2(50),
     password VARCHAR2(50),

     eGender VARCHAR2(10),
     eBranchNo VARCHAR2(100),
     eBirthDate TIMESTAMP,
     eIndividual VARCHAR2(100),
     eCifAcctName VARCHAR2(200),
     eStatus VARCHAR2(30),
     eCertType VARCHAR2(100),
     eCertCode VARCHAR2(100),
     eContactPerson VARCHAR2(100),
     eAddr VARCHAR2(500),
     eBirthPlace VARCHAR2(500),
     eCountry VARCHAR2(100),
     eCifNo VARCHAR2(100),
     eBankNo VARCHAR2(100),
     eTelephone VARCHAR2(100)
);

TYPE RelatedAccountWSRecord IS RECORD (
     acctNo VARCHAR2(50),
     alias VARCHAR2(50)
);

TYPE ListRelatedAccountWS IS TABLE OF RelatedAccountWSRecord INDEX BY PLS_INTEGER;

TYPE AcctNoListRECORD IS RECORD (
     relatedAccountWSs ListRelatedAccountWS,
     strRelatedAccountWSs VARCHAR2(1000)
);

-- pojo class EbankService
TYPE EbankServiceRECORD IS RECORD (
     branchCode VARCHAR2(50),
     tellerId VARCHAR2(50),
     tokenNo VARCHAR2(50),
     sentDate VARCHAR2(50),
     appReg VARCHAR2(50),
     fnCode VARCHAR2(50),
     userInfo UserInfoRecord,
     acctNoList AcctNoListRECORD
);



FUNCTION FN_GET_PARAMETER_MSG(pv_msg IN CLOB, pv_parameter IN VARCHAR2, pv_path IN VARCHAR2) RETURN VARCHAR2;
FUNCTION FN_GET_ATTRIBUTE_MSG(pv_msg IN CLOB, pv_attribute IN VARCHAR2, pv_path IN VARCHAR2) RETURN VARCHAR2;
FUNCTION FN_SEND_CONTACT(ebankService IN EbankServiceRECORD, pv_fn_code IN VARCHAR2, p_user_id NUMBER) RETURN VARCHAR2;

PROCEDURE PRC_MESSAGE_PROCESS_TEST(pv_errcode IN OUT VARCHAR2, pv_msg IN VARCHAR2);
PROCEDURE PRC_MESSAGE_PROCESS(pv_errcode IN OUT VARCHAR2, pv_msg IN CLOB);
PROCEDURE PRC_RESET_IB_ACCTNO (pv_errcode IN OUT VARCHAR2, ebankService IN EbankServiceRECORD);
PROCEDURE PRC_REG_IB_ACCTNO (pv_errcode IN OUT VARCHAR2, ebankService IN EbankServiceRECORD);
PROCEDURE PRC_VALID_IB_ACCTNO (pv_errcode IN OUT VARCHAR2, ebankService IN EbankServiceRECORD);
PROCEDURE PRC_INSERT_NEW_USER (pv_errcode IN OUT VARCHAR2, ebankService IN EbankServiceRECORD);
PROCEDURE PRC_ANALYZE_MSG_XML (ebankService IN OUT EbankServiceRECORD, pv_errcode IN OUT VARCHAR2, pv_msg IN CLOB);

FUNC_REG_IB_ACCOUNT CONSTANT VARCHAR2(50) := 'reg_ib_account';
FUNC_RESET_IB_ACCOUNT CONSTANT VARCHAR2(50) := 'reset_ib_account';
FUNC_VALID_IB_ACCOUNT CONSTANT VARCHAR2(50) := 'valid_ib_account';

RESULT_SUCC CONSTANT VARCHAR2(20) := '0'; -- SUCCESS
RESULT_EXCP CONSTANT VARCHAR2(20) := '-1'; -- EXCEPTION
RESULT_CIF_EXISTS CONSTANT VARCHAR2(20) := '-2'; -- CIF_EXISTS
RESULT_USER_EXISTS CONSTANT VARCHAR2(20) := '-3'; -- USER_EXISTS
RESULT_INSERT_USER_FALSE CONSTANT VARCHAR2(20) := '-4'; -- USER_EXISTS
RESULT_INVALID_DATA CONSTANT VARCHAR2(20) := '-5'; -- INVALID_DATA
RESULT_CIF_RESET_PWD CONSTANT VARCHAR2(20) := '-10'; -- CIF_EXISTS
RESULT_API_NOT_FOUND CONSTANT VARCHAR2(20) := '-98'; -- API_NOT_FOUND
RESULT_FALSE CONSTANT VARCHAR2(20) := '-99'; -- RESULT_FALSE

SYS_CHANNEL_CODE CONSTANT VARCHAR2(20) := 'IB';
SYS_SYSTEM_CODE CONSTANT VARCHAR2(20) := 'BC';
SYS_FUNC_EMAIL CONSTANT VARCHAR2(20) := 'EM';
SYS_FUNC_SMS CONSTANT VARCHAR2(20) := 'SM';
SYS_DEFAULT_URL CONSTANT VARCHAR2(20) := 'ebank.msb.com.vn';
SYS_DEFAULT_SPACE CONSTANT VARCHAR2(20) := ',';
SYS_PRODUCT CONSTANT VARCHAR2(20) := 'RU';

OPER_STATUS_NEWR CONSTANT VARCHAR2(20) := 'NEWR';
OPER_STATUS_DLTD CONSTANT VARCHAR2(20) := 'DLTD';
OPER_STATUS_REGS CONSTANT VARCHAR2(20) := 'REGS';
OPER_STATUS_ACTV CONSTANT VARCHAR2(20) := 'ACTV';

LOG_REGISTER_STATUS_NEWR CONSTANT VARCHAR2(20) := 'NEWR';
LOG_REGISTER_STATUS_LKTK CONSTANT VARCHAR2(20) := 'LKTK';

STATUS_ERROR_REGISTER_LOG CONSTANT VARCHAR2(20) := 'ERROR';
STATUS_PENDING_REGISTER_LOG CONSTANT VARCHAR2(20) := 'PENDING';
STATUS_APPROVED_REGISTER_LOG CONSTANT VARCHAR2(20) := 'APPROVED';

TSUNAMI_APP_PR CONSTANT VARCHAR2(20) := 'TSUNAMI';
MPAYROLL_APP_PR CONSTANT VARCHAR2(20) := 'MPAYROLL';
SMS_APP_PR CONSTANT VARCHAR2(20) := 'SMS';
STARFISH_APP_PR CONSTANT VARCHAR2(20) := 'STARFISH';
CCS_APP_PR CONSTANT VARCHAR2(20) := 'CCS';


SECURITY_TYPE_TK CONSTANT VARCHAR2(20) := 'TK';
SECURITY_TYPE_SM CONSTANT VARCHAR2(20) := 'SM';


END PKG_MSB_BC_REG_API;

/
